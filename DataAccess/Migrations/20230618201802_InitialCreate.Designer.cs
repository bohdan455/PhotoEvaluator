// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(PhotoEvaluatorContext))]
    [Migration("20230618201802_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Entities.ChatState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ChatState");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            State = "Set name"
                        },
                        new
                        {
                            Id = 2,
                            State = "Set age"
                        },
                        new
                        {
                            Id = 3,
                            State = "Set photo"
                        },
                        new
                        {
                            Id = 4,
                            State = "Menu"
                        },
                        new
                        {
                            Id = 5,
                            State = "Rate"
                        },
                        new
                        {
                            Id = 6,
                            State = "Settings"
                        },
                        new
                        {
                            Id = 7,
                            State = "Change name"
                        },
                        new
                        {
                            Id = 8,
                            State = "Change photo"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RatingNumber")
                        .HasColumnType("int");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TelegramUserId");

                    b.HasIndex("Id", "TelegramUserId")
                        .IsUnique();

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("DataAccess.Entities.TelegramUser", b =>
                {
                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhotoId")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("TelegramId");

                    b.HasIndex("StateId");

                    b.ToTable("TelegramUser");
                });

            modelBuilder.Entity("DataAccess.Entities.Rating", b =>
                {
                    b.HasOne("DataAccess.Entities.TelegramUser", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("TelegramUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entities.TelegramUser", b =>
                {
                    b.HasOne("DataAccess.Entities.ChatState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("DataAccess.Entities.TelegramUser", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
